DISTRO_NAME = "Lite Gateway (A Yocto Project Based Distro)"
DISTRO_VERSION = "2.4"
DISTRO_CODENAME = "rocko"

# These default to 'oecore' and 'nodistro'
SDK_NAME_PREFIX = "${DISTRO}"
SDK_VERSION = "${DISTRO_VERSION}"

TARGET_VENDOR = "-linaro"

# defaultsetup.inc gets includes after ${DISTRO}.conf, so we need to set it here
# to make the python below work. Local, site and auto.conf will override it.
TCMODE ?= "default"

# TODO: is that really want we want?
IMAGE_LINGUAS = "en-gb"

# =========================================================================
# DISTRO features
# =========================================================================
DISTRO_FEATURES  = "alsa"
DISTRO_FEATURES += "argp"
DISTRO_FEATURES += "ext2"
DISTRO_FEATURES += "ext4"
DISTRO_FEATURES += "largefile"
DISTRO_FEATURES += "ipv4"
DISTRO_FEATURES += "ipv6"
DISTRO_FEATURES += "multiarch"
DISTRO_FEATURES += "wifi"
DISTRO_FEATURES += "nfs"
DISTRO_FEATURES += "usbgadget"
DISTRO_FEATURES += "usbhost"
DISTRO_FEATURES += "xattr"
DISTRO_FEATURES += "zeroconf"
DISTRO_FEATURES += "bluetooth"
DISTRO_FEATURES += "bluez5"
DISTRO_FEATURES += "${DISTRO_FEATURES_LIBC}"

# add support of gstreamer
DISTRO_FEATURES_append = " gstreamer "

# add support of wayland
DISTRO_FEATURES_append = " wayland pam "

# add support of X11
#DISTRO_FEATURES_append = " x11"

# add support of systemd
DISTRO_FEATURES_append = " systemd "

# Disabling sysvinit
DISTRO_FEATURES_BACKFILL_CONSIDERED += "sysvinit"

VIRTUAL-RUNTIME_init_manager = "systemd"
VIRTUAL-RUNTIME_initscripts = "systemd-compat-units"

# opengl
DISTRO_FEATURES_append = " opengl "

# for docker / virtualization
#DISTRO_FEATURES_append = " virtualization "
# =========================================================================
# PACKAGE CONFIG
# =========================================================================
PACKAGECONFIG_append_pn-systemd = " resolved networkd "
PACKAGECONFIG_append_pn-qtbase = " gles2 fontconfig examples"
PACKAGECONFIG_remove_pn-gpsd = "qt"
PACKAGECONFIG_append_pn-gstreamer1.0-plugins-bad = " kms"

# =========================================================================
# LICENSE FLAGS
# =========================================================================
LICENSE_FLAGS_WHITELIST += "commercial_gstreamer1.0-libav commercial_ffmpeg commercial_x264 non-commercial"

# =========================================================================
# LOCAL / IMAGE configuration
# =========================================================================
# Set GLIBC_GENERATE_LOCALES to the locales you wish to generate should you not
# wish to perform the time-consuming step of generating all LIBC locales.
# NOTE: If removing en_US.UTF-8 you will also need to uncomment, and set
# appropriate value for IMAGE_LINGUAS.
# WARNING: this may break localisation!
GLIBC_GENERATE_LOCALES = "en_GB.UTF-8 en_US.UTF-8"
IMAGE_LINGUAS ?= "en-gb"

# Support of devshell
INHERIT += "devshell"

# Remove the old image before the new one generated to save disk space
RM_OLD_IMAGE = "1"

# Nice debug data
INHERIT += "buildhistory"
BUILDHISTORY_COMMIT = "1"
INHERIT += "image-buildinfo"


# Clean up working directory after build
INHERIT += "rm_work"

# force the usage of debian package
#PACKAGE_CLASSES = "package_deb"

# Avoid to duplicate the rootfs tarball by generating both tar.gz/tar.xz
IMAGE_FSTYPES_remove = "tar.gz"

